name: ci

on:
  push:
    branches:
      - main
      - 4-add-unit-test-to-sample-app

jobs:
#   security:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@master
#       - name: Run Snyk to check for vulnerabilities
#         uses: snyk/actions/node@master
#         continue-on-error: true # To make sure that SARIF upload gets called
#         env:
#           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      # TODO stretch goal - enable time permitting
      #   with:
      #     args: --sarif-file-output=snyk.sarif
      # - name: Upload result to GitHub Code Scanning
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: snyk.sarif
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use NodeJS version ${{ matrix.node-version}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version}}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

      - name: ACR Login
        uses: azure/docker-login@v1
        with:
          login-server: xyzappsample.azurecr.io
          username: ${{ secrets.ACR_USER }}
          password: ${{ secrets.ACR_TOKEN }}
      # - run: |
      #     az acr build --image sample/xyzsample:v2 --registry xyzappsample.azurecr.io --file Dockerfile .
      - name: ACR Build and Push
        uses: azure/acr-build@v1
        with:
          service_principal: ${{ secrets.service_principal }}
          service_principal_password: ${{ secrets.service_principal_password }}
          tenant: xyzappsample.azurecr.io
          registry: xzysample
          repository: sample/xyzsample
          image: xyzsample

